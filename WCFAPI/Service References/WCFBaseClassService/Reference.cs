//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFAPI.WCFBaseClassService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCFBaseClassService.IWCFBaseClass")]
    public interface IWCFBaseClass {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBaseClass/GetData", ReplyAction="http://tempuri.org/IWCFBaseClass/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBaseClass/GetData", ReplyAction="http://tempuri.org/IWCFBaseClass/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBaseClass/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IWCFBaseClass/GetDataUsingDataContractResponse")]
        WCFBaseClass.CompositeType GetDataUsingDataContract(WCFBaseClass.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBaseClass/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IWCFBaseClass/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WCFBaseClass.CompositeType> GetDataUsingDataContractAsync(WCFBaseClass.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBaseClass/GetSuccessPet", ReplyAction="http://tempuri.org/IWCFBaseClass/GetSuccessPetResponse")]
        WCFBaseClass.Success<WCFBaseClass.Pet> GetSuccessPet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBaseClass/GetSuccessPet", ReplyAction="http://tempuri.org/IWCFBaseClass/GetSuccessPetResponse")]
        System.Threading.Tasks.Task<WCFBaseClass.Success<WCFBaseClass.Pet>> GetSuccessPetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBaseClass/GetFalliblePet", ReplyAction="http://tempuri.org/IWCFBaseClass/GetFalliblePetResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(WCFBaseClass.Success<WCFBaseClass.Pet>))]
        WCFBaseClass.Fallible<WCFBaseClass.Pet> GetFalliblePet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFBaseClass/GetFalliblePet", ReplyAction="http://tempuri.org/IWCFBaseClass/GetFalliblePetResponse")]
        System.Threading.Tasks.Task<WCFBaseClass.Fallible<WCFBaseClass.Pet>> GetFalliblePetAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFBaseClassChannel : WCFAPI.WCFBaseClassService.IWCFBaseClass, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFBaseClassClient : System.ServiceModel.ClientBase<WCFAPI.WCFBaseClassService.IWCFBaseClass>, WCFAPI.WCFBaseClassService.IWCFBaseClass {
        
        public WCFBaseClassClient() {
        }
        
        public WCFBaseClassClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFBaseClassClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFBaseClassClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFBaseClassClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WCFBaseClass.CompositeType GetDataUsingDataContract(WCFBaseClass.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WCFBaseClass.CompositeType> GetDataUsingDataContractAsync(WCFBaseClass.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public WCFBaseClass.Success<WCFBaseClass.Pet> GetSuccessPet(int id) {
            return base.Channel.GetSuccessPet(id);
        }
        
        public System.Threading.Tasks.Task<WCFBaseClass.Success<WCFBaseClass.Pet>> GetSuccessPetAsync(int id) {
            return base.Channel.GetSuccessPetAsync(id);
        }
        
        public WCFBaseClass.Fallible<WCFBaseClass.Pet> GetFalliblePet(int id) {
            return base.Channel.GetFalliblePet(id);
        }
        
        public System.Threading.Tasks.Task<WCFBaseClass.Fallible<WCFBaseClass.Pet>> GetFalliblePetAsync(int id) {
            return base.Channel.GetFalliblePetAsync(id);
        }
    }
}
